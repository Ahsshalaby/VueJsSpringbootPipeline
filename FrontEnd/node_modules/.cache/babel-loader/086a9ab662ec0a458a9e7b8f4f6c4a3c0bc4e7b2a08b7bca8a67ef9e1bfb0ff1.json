{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport StudentForm from './StudentForm.vue';\nimport StudentService from '@/services/StudentService';\nexport default {\n  name: \"StudentTable\",\n  components: {\n    StudentForm\n  },\n  data() {\n    return {\n      Surveys: [],\n      selectedStudent: null\n    };\n  },\n  methods: {\n    getStudents() {\n      StudentService.getStudents().then(response => {\n        this.Surveys = response.data;\n      }).catch(error => {\n        console.error(\"There was an error fetching the students!\", error);\n      });\n    },\n    formatDate(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleDateString();\n    },\n    selectStudent(student) {\n      this.selectedStudent = student;\n    },\n    async updateStudent(student) {\n      const newfname = prompt(\"First name:\", student.firstName);\n      const newlname = prompt(\"Last name:\", student.lastName);\n      const newEmail = prompt(\"Email:\", student.email);\n      const newAddress = prompt(\"Address:\", student.streetAddress);\n      const newPhone = prompt(\"Phone:\", student.telephone);\n      const newCity = prompt(\"City:\", student.city);\n      const newState = prompt(\"State:\", student.state);\n      const newZip = prompt(\"Zip:\", student.zipcode);\n      const newDate = Date.now();\n      const newLikedMost = prompt(\"What did you like most?\", student.likes);\n      const newHowInterested = prompt(\"How interested are you?\", student.interest);\n      const newHowRecommend = prompt(\"Would you recommend?\", student.recommending);\n      const updatedStudent = {\n        ...student,\n        firstName: newfname,\n        lastName: newlname,\n        email: newEmail,\n        streetAddress: newAddress,\n        telephone: newPhone,\n        city: newCity,\n        state: newState,\n        zipcode: newZip,\n        dateOfSurvey: newDate,\n        likes: newLikedMost,\n        interest: newHowInterested,\n        recommending: newHowRecommend\n      };\n      console.log(\"Sending this student to backend:\", updatedStudent);\n      try {\n        await StudentService.updateStudent(student.id, updatedStudent);\n        this.getStudents();\n      } catch (err) {\n        console.error(\"Update failed:\", err);\n      }\n    },\n    async deleteStudent(email) {\n      try {\n        await StudentService.deleteStudent(email);\n        this.students = this.students.filter(student => student.email !== email);\n      } catch (error) {\n        console.error(\"Error deleting student:\", error);\n      }\n      this.getStudents();\n    }\n  },\n  created() {\n    this.getStudents();\n  }\n};","map":{"version":3,"names":["StudentForm","StudentService","name","components","data","Surveys","selectedStudent","methods","getStudents","then","response","catch","error","console","formatDate","timestamp","date","Date","toLocaleDateString","selectStudent","student","updateStudent","newfname","prompt","firstName","newlname","lastName","newEmail","email","newAddress","streetAddress","newPhone","telephone","newCity","city","newState","state","newZip","zipcode","newDate","now","newLikedMost","likes","newHowInterested","interest","newHowRecommend","recommending","updatedStudent","dateOfSurvey","log","id","err","deleteStudent","students","filter","created"],"sources":["C:\\Users\\bestu\\Documents\\Mason\\CS645\\HW3\\VueJsSpringbootPipeline\\FrontEnd\\src\\components\\Student.vue"],"sourcesContent":["\r\n\r\n\r\n<template>\r\n\r\n  <div class=\"container\">\r\n    <StudentForm @survey-submitted=\"getStudents\" />\r\n\r\n    <h1 class=\"text-center\">Student List</h1>\r\n \r\n\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Address</th>\r\n          <th>Phone</th>\r\n          <th>City</th>\r\n          <th>State</th>\r\n          <th>Zip</th>\r\n          <th>Date</th>\r\n          <th>Email</th>\r\n          <th>Liked Most</th>\r\n          <th>Interest</th>\r\n          <th>Recommend</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"student in Surveys\" :key=\"student.email\">\r\n          <td>{{ student.firstName }}</td>\r\n          <td>{{ student.lastName }}</td>\r\n          <td>{{ student.streetAddress }}</td>\r\n          <td>{{ student.telephone }}</td>\r\n          <td>{{ student.city }}</td>\r\n          <td>{{ student.state }}</td>\r\n          <td>{{ student.zipcode }}</td>\r\n          <td>{{ student.dateOfSurvey }}</td>\r\n          <td>{{ student.email }}</td>\r\n          <td>{{ student.likes }}</td>\r\n          <td>{{ student.interest }}</td>\r\n          <td>{{ student.recommending }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm\" @click=\"updateStudent(student)\">Update</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteStudent(student.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StudentForm from './StudentForm.vue';\r\nimport StudentService from '@/services/StudentService';\r\n\r\nexport default {\r\n  \r\n  name: \"StudentTable\",\r\n  components: { StudentForm },\r\n  data() {\r\n    return {\r\n      Surveys: [],\r\n      selectedStudent: null\r\n    };\r\n  },\r\n  methods: {\r\n    getStudents() {\r\n      StudentService.getStudents()\r\n        .then(response => {\r\n          this.Surveys = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"There was an error fetching the students!\", error);\r\n        });\r\n    },\r\n    formatDate(timestamp) {\r\n      const date = new Date(timestamp);\r\n      return date.toLocaleDateString();\r\n    },\r\n    selectStudent(student) {\r\n      this.selectedStudent = student;\r\n    },\r\n    \r\n\r\n    \r\nasync updateStudent(student) {\r\n  const newfname = prompt(\"First name:\", student.firstName);\r\n  const newlname = prompt(\"Last name:\", student.lastName);\r\n  const newEmail = prompt(\"Email:\", student.email);\r\n  const newAddress = prompt(\"Address:\", student.streetAddress);\r\n  const newPhone = prompt(\"Phone:\", student.telephone);\r\n  const newCity = prompt(\"City:\", student.city);\r\n  const newState = prompt(\"State:\", student.state);\r\n  const newZip = prompt(\"Zip:\", student.zipcode);\r\n  const newDate = Date.now(); \r\n  const newLikedMost = prompt(\"What did you like most?\", student.likes);\r\n  const newHowInterested = prompt(\"How interested are you?\", student.interest);\r\n  const newHowRecommend = prompt(\"Would you recommend?\", student.recommending);\r\n\r\n  const updatedStudent = {\r\n    ...student,\r\n    firstName: newfname,\r\n    lastName: newlname,\r\n    email: newEmail,\r\n    streetAddress: newAddress,\r\n    telephone: newPhone,\r\n    city: newCity,\r\n    state: newState,\r\n    zipcode: newZip,\r\n    dateOfSurvey: newDate,\r\n    likes: newLikedMost,\r\n    interest: newHowInterested,\r\n    recommending: newHowRecommend\r\n  };\r\n\r\n  console.log(\"Sending this student to backend:\", updatedStudent);\r\n\r\n  try {\r\n    await StudentService.updateStudent(student.id, updatedStudent);\r\n    this.getStudents(); \r\n  } catch (err) {\r\n    console.error(\"Update failed:\", err);\r\n  }\r\n},\r\n    async deleteStudent(email) {\r\n    try {\r\n      await StudentService.deleteStudent(email);\r\n      this.students = this.students.filter(student => student.email !== email);\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n    }\r\n    this.getStudents();\r\n  }\r\n  },\r\n  created() {\r\n    this.getStudents();\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}