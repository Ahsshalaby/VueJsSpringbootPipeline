{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StudentForm = _resolveComponent(\"StudentForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_StudentForm, {\n    onSurveySubmitted: $options.getStudents\n  }, null, 8, [\"onSurveySubmitted\"]), _cache[1] || (_cache[1] = _createElementVNode(\"h1\", {\n    class: \"text-center\"\n  }, \"Student List\", -1)), _createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"First Name\"), _createElementVNode(\"th\", null, \"Last Name\"), _createElementVNode(\"th\", null, \"Address\"), _createElementVNode(\"th\", null, \"Phone\"), _createElementVNode(\"th\", null, \"City\"), _createElementVNode(\"th\", null, \"State\"), _createElementVNode(\"th\", null, \"Zip\"), _createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"Liked Most\"), _createElementVNode(\"th\", null, \"Interest\"), _createElementVNode(\"th\", null, \"Recommend\"), _createElementVNode(\"th\", null, \"Actions\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Surveys, student => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: student.email\n    }, [_createElementVNode(\"td\", null, _toDisplayString(student.firstName), 1), _createElementVNode(\"td\", null, _toDisplayString(student.lastName), 1), _createElementVNode(\"td\", null, _toDisplayString(student.streetAddress), 1), _createElementVNode(\"td\", null, _toDisplayString(student.telephone), 1), _createElementVNode(\"td\", null, _toDisplayString(student.city), 1), _createElementVNode(\"td\", null, _toDisplayString(student.state), 1), _createElementVNode(\"td\", null, _toDisplayString(student.zipcode), 1), _createElementVNode(\"td\", null, _toDisplayString(student.dateOfSurvey), 1), _createElementVNode(\"td\", null, _toDisplayString(student.email), 1), _createElementVNode(\"td\", null, _toDisplayString(student.likes), 1), _createElementVNode(\"td\", null, _toDisplayString(student.interest), 1), _createElementVNode(\"td\", null, _toDisplayString(student.recommending), 1), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-warning btn-sm\",\n      onClick: $event => $options.updateStudent(student)\n    }, \"Update\", 8, _hoisted_3), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $options.deleteStudent(student.id)\n    }, \"Delete\", 8, _hoisted_4)])]);\n  }), 128))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_StudentForm","onSurveySubmitted","$options","getStudents","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","Surveys","student","key","email","_toDisplayString","firstName","lastName","streetAddress","telephone","city","state","zipcode","dateOfSurvey","likes","interest","recommending","onClick","$event","updateStudent","_hoisted_3","deleteStudent","id","_hoisted_4"],"sources":["C:\\Users\\bestu\\Documents\\Mason\\CS645\\HW3\\VueJsSpringbootPipeline\\FrontEnd\\src\\components\\Student.vue"],"sourcesContent":["\r\n\r\n\r\n<template>\r\n\r\n  <div class=\"container\">\r\n    <StudentForm @survey-submitted=\"getStudents\" />\r\n\r\n    <h1 class=\"text-center\">Student List</h1>\r\n \r\n\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Address</th>\r\n          <th>Phone</th>\r\n          <th>City</th>\r\n          <th>State</th>\r\n          <th>Zip</th>\r\n          <th>Date</th>\r\n          <th>Email</th>\r\n          <th>Liked Most</th>\r\n          <th>Interest</th>\r\n          <th>Recommend</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"student in Surveys\" :key=\"student.email\">\r\n          <td>{{ student.firstName }}</td>\r\n          <td>{{ student.lastName }}</td>\r\n          <td>{{ student.streetAddress }}</td>\r\n          <td>{{ student.telephone }}</td>\r\n          <td>{{ student.city }}</td>\r\n          <td>{{ student.state }}</td>\r\n          <td>{{ student.zipcode }}</td>\r\n          <td>{{ student.dateOfSurvey }}</td>\r\n          <td>{{ student.email }}</td>\r\n          <td>{{ student.likes }}</td>\r\n          <td>{{ student.interest }}</td>\r\n          <td>{{ student.recommending }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm\" @click=\"updateStudent(student)\">Update</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteStudent(student.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StudentForm from './StudentForm.vue';\r\nimport StudentService from '@/services/StudentService';\r\n\r\nexport default {\r\n  \r\n  name: \"StudentTable\",\r\n  components: { StudentForm },\r\n  data() {\r\n    return {\r\n      Surveys: [],\r\n      selectedStudent: null\r\n    };\r\n  },\r\n  methods: {\r\n    getStudents() {\r\n      StudentService.getStudents()\r\n        .then(response => {\r\n          this.Surveys = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(\"There was an error fetching the students!\", error);\r\n        });\r\n    },\r\n    formatDate(timestamp) {\r\n      const date = new Date(timestamp);\r\n      return date.toLocaleDateString();\r\n    },\r\n    selectStudent(student) {\r\n      this.selectedStudent = student;\r\n    },\r\n    \r\n\r\n    \r\nasync updateStudent(student) {\r\n  const newfname = prompt(\"First name:\", student.firstName);\r\n  const newlname = prompt(\"Last name:\", student.lastName);\r\n  const newEmail = prompt(\"Email:\", student.email);\r\n  const newAddress = prompt(\"Address:\", student.streetAddress);\r\n  const newPhone = prompt(\"Phone:\", student.telephone);\r\n  const newCity = prompt(\"City:\", student.city);\r\n  const newState = prompt(\"State:\", student.state);\r\n  const newZip = prompt(\"Zip:\", student.zipcode);\r\n  const newDate = Date.now(); \r\n  const newLikedMost = prompt(\"What did you like most?\", student.likes);\r\n  const newHowInterested = prompt(\"How interested are you?\", student.interest);\r\n  const newHowRecommend = prompt(\"Would you recommend?\", student.recommending);\r\n\r\n  const updatedStudent = {\r\n    ...student,\r\n    firstName: newfname,\r\n    lastName: newlname,\r\n    email: newEmail,\r\n    streetAddress: newAddress,\r\n    telephone: newPhone,\r\n    city: newCity,\r\n    state: newState,\r\n    zipcode: newZip,\r\n    dateOfSurvey: newDate,\r\n    likes: newLikedMost,\r\n    interest: newHowInterested,\r\n    recommending: newHowRecommend\r\n  };\r\n\r\n  console.log(\"Sending this student to backend:\", updatedStudent);\r\n\r\n  try {\r\n    await StudentService.updateStudent(student.id, updatedStudent);\r\n    this.getStudents(); \r\n  } catch (err) {\r\n    console.error(\"Update failed:\", err);\r\n  }\r\n},\r\n    async deleteStudent(email) {\r\n    try {\r\n      await StudentService.deleteStudent(email);\r\n      this.students = this.students.filter(student => student.email !== email);\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n    }\r\n    this.getStudents();\r\n  }\r\n  },\r\n  created() {\r\n    this.getStudents();\r\n  }\r\n};\r\n</script>"],"mappings":";;EAKOA,KAAK,EAAC;AAAW;;EAMbA,KAAK,EAAC;AAAqB;;;;;uBANpCC,mBAAA,CA8CM,OA9CNC,UA8CM,GA7CJC,YAAA,CAA+CC,sBAAA;IAAjCC,iBAAgB,EAAEC,QAAA,CAAAC;EAAW,oC,0BAE3CC,mBAAA,CAAyC;IAArCR,KAAK,EAAC;EAAa,GAAC,cAAY,QAGpCQ,mBAAA,CAsCQ,SAtCRC,UAsCQ,G,0BArCND,mBAAA,CAgBQ,gBAfNA,mBAAA,CAcK,aAbHA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAgB,YAAZ,SAAO,E,UAGfA,mBAAA,CAmBQ,iB,kBAlBNP,mBAAA,CAiBKS,SAAA,QAAAC,WAAA,CAjBiBC,KAAA,CAAAC,OAAO,EAAlBC,OAAO;yBAAlBb,mBAAA,CAiBK;MAjB2Bc,GAAG,EAAED,OAAO,CAACE;QAC3CR,mBAAA,CAAgC,YAAAS,gBAAA,CAAzBH,OAAO,CAACI,SAAS,OACxBV,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBH,OAAO,CAACK,QAAQ,OACvBX,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BH,OAAO,CAACM,aAAa,OAC5BZ,mBAAA,CAAgC,YAAAS,gBAAA,CAAzBH,OAAO,CAACO,SAAS,OACxBb,mBAAA,CAA2B,YAAAS,gBAAA,CAApBH,OAAO,CAACQ,IAAI,OACnBd,mBAAA,CAA4B,YAAAS,gBAAA,CAArBH,OAAO,CAACS,KAAK,OACpBf,mBAAA,CAA8B,YAAAS,gBAAA,CAAvBH,OAAO,CAACU,OAAO,OACtBhB,mBAAA,CAAmC,YAAAS,gBAAA,CAA5BH,OAAO,CAACW,YAAY,OAC3BjB,mBAAA,CAA4B,YAAAS,gBAAA,CAArBH,OAAO,CAACE,KAAK,OACpBR,mBAAA,CAA4B,YAAAS,gBAAA,CAArBH,OAAO,CAACY,KAAK,OACpBlB,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBH,OAAO,CAACa,QAAQ,OACvBnB,mBAAA,CAAmC,YAAAS,gBAAA,CAA5BH,OAAO,CAACc,YAAY,OAC3BpB,mBAAA,CAGK,aAFHA,mBAAA,CAAsF;MAA9ER,KAAK,EAAC,wBAAwB;MAAE6B,OAAK,EAAAC,MAAA,IAAExB,QAAA,CAAAyB,aAAa,CAACjB,OAAO;OAAG,QAAM,KAAAkB,UAAA,GAC7ExB,mBAAA,CAAwF;MAAhFR,KAAK,EAAC,uBAAuB;MAAE6B,OAAK,EAAAC,MAAA,IAAExB,QAAA,CAAA2B,aAAa,CAACnB,OAAO,CAACoB,EAAE;OAAG,QAAM,KAAAC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}